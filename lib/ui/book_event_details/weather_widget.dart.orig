import 'package:flutter/material.dart';
import 'package:flutter_redux/flutter_redux.dart';
import 'package:leptisapp/data/models/leptis/book_event.dart';
import 'package:leptisapp/data/models/leptis/weather.dart';
import 'package:leptisapp/redux/app/app_state.dart';
import 'package:leptisapp/redux/leptis/book_event/book_event_actions.dart';
import 'package:leptisapp/redux/leptis/book_event/book_event_selectors.dart';
import 'package:leptisapp/utils/weather_icons.dart';


class WeatherWidget extends StatelessWidget {
  WeatherWidget({
    @required this.bookEvent,
    @required this.size,
    @required this.onWeatherTapped,
  });
  final BookEvent bookEvent;
  final double size;
  final VoidCallback onWeatherTapped;

  @override
  Widget build(BuildContext context) {
    return StoreConnector<AppState, Weather>(
      rebuildOnChange: true,
      onInit: (store) => store.dispatch(FetchWeatherAction(bookEvent)),
      converter: (store) => weatherForBookEventSelector(store.state, bookEvent),
      builder: (_, Weather weather) => WeatherContent(weather: weather, size: size, onWeatherTapped: onWeatherTapped),
      /*converter: (store) => WeatherViewModel.fromStore(store),
      builder: (_, viewModel) {
        return viewModel.weather == null ? Container() : Column(
          children: <Widget>[
            Padding(
              padding: EdgeInsets.only(bottom: 10.0),
              child: Icon(viewModel.weather.condition.getIcon(), size: size),
            ),
            Text(viewModel.weather.condition.getDescription(), style: Theme.of(context).textTheme.caption)
          ],
        );
      },*/
    );

    /*return StoreConnector<AppState, WeatherViewModel>(
      //onInit: (store) => store.dispatch(FetchWeatherAction(bookEvent)),
      //converter: (store) => store.state.weatherState.weather,
      distinct: true,
      converter: (store) => WeatherViewModel.fromStore(store),
      builder: (BuildContext context, WeatherViewModel viewModel) {
        return WeatherContent(
          onWeatherTapped: onWeatherTapped,
          viewModel: viewModel,
          size: size,
        );
      },
    );*/
  }
}

class WeatherContent extends StatelessWidget {
  WeatherContent({
    @required this.weather,
    @required this.size,
    @required this.onWeatherTapped,
  });
  final Weather weather;
  final double size;
  final VoidCallback onWeatherTapped;

  @override
  Widget build(BuildContext context) {
    var content = (weather != null)?
      Column(
        children: <Widget>[
          Padding(
            padding: EdgeInsets.only(bottom: 10.0),
            child: Icon(weather != null ? weather.condition.getIcon() : WeatherIcons.na, size: size),
          ),
          Text(weather != null ? weather.condition.getDescription() : "Sin previsión", style: Theme.of(context).textTheme.caption)
        ],
      ) : Container();

    return content;

    /*return Column(
      children: <Widget>[
        Padding(
          padding: EdgeInsets.only(bottom: 10.0),
          child: Icon(weather != null ? weather.condition.getIcon() : WeatherIcons.na, size: size),
        ),
        Text(weather != null ? weather.condition.getDescription() : "Sin previsión", style: Theme.of(context).textTheme.caption)
      ],
    );*/
  }
}